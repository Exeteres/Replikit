// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`useChannel hook should add a channel parameter to command 1`] = `
Object {
  "aliases": Array [],
  "commands": Array [],
  "name": "test",
  "params": Array [
    Object {
      "converter": Object {
        "resolver": [Function],
        "validator": [Function],
      },
      "isString": false,
      "name": "channel",
      "optional": true,
      "options": Object {
        "default": [Function],
        "useInAuthorization": true,
      },
      "type": [Function],
    },
  ],
  "requiredCount": 0,
}
`;

exports[`useMember hook should add a member parameter to command 1`] = `
Object {
  "aliases": Array [],
  "commands": Array [],
  "middlewareRouter": MiddlewareRouter {
    "chainMap": Map {
      2 => HandlerChain {
        "firstHandler": HandlerWrapper {
          "handler": [Function],
        },
        "lastHandler": HandlerWrapper {
          "handler": [Function],
        },
      },
    },
  },
  "name": "test",
  "params": Array [
    Object {
      "converter": Object {
        "resolver": [Function],
        "validator": [Function],
      },
      "isString": false,
      "name": "channel",
      "optional": true,
      "options": Object {
        "default": [Function],
        "useInAuthorization": true,
      },
      "type": [Function],
    },
    Object {
      "converter": Object {
        "resolver": [Function],
        "validator": [Function],
      },
      "isString": false,
      "name": "user",
      "optional": true,
      "options": Object {
        "default": [Function],
      },
      "type": [Function],
    },
  ],
  "requiredCount": 0,
}
`;

exports[`useOptional hook should add an optional parameter to command 1`] = `
Object {
  "aliases": Array [],
  "commands": Array [],
  "name": "test",
  "params": Array [
    Object {
      "converter": Object {
        "validator": [Function],
      },
      "isString": false,
      "name": "p2",
      "optional": true,
      "options": Object {
        "default": true,
      },
      "type": [Function],
    },
  ],
  "requiredCount": 0,
}
`;

exports[`useRequired hook should add a required parameter to command 1`] = `
Object {
  "aliases": Array [],
  "commands": Array [],
  "name": "test",
  "params": Array [
    Object {
      "converter": Object {
        "validator": [Function],
      },
      "isString": false,
      "name": "p1",
      "options": Object {},
      "type": [Function],
    },
  ],
  "requiredCount": 1,
}
`;

exports[`useRest hook should add a rest parameter to command 1`] = `
Object {
  "aliases": Array [],
  "commands": Array [],
  "name": "test",
  "params": Array [],
  "requiredCount": 0,
  "rest": Object {
    "isString": true,
    "name": "p3",
    "options": Object {},
  },
}
`;

exports[`useText hook should add a text parameter to command 1`] = `
Object {
  "aliases": Array [],
  "commands": Array [],
  "name": "test",
  "params": Array [],
  "requiredCount": 0,
  "text": Object {},
}
`;

exports[`useUser hook should add a user parameter to command 1`] = `
Object {
  "aliases": Array [],
  "commands": Array [],
  "name": "test",
  "params": Array [
    Object {
      "converter": Object {
        "resolver": [Function],
        "validator": [Function],
      },
      "isString": false,
      "name": "user",
      "optional": true,
      "options": Object {
        "default": [Function],
      },
      "type": [Function],
    },
  ],
  "requiredCount": 0,
}
`;
